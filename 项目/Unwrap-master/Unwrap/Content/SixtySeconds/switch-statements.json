{
    "title": "Switch statements",
    "postscript": "",
    "reviewType": "multipleSelection",
    "question": "Which of these statements are true about <code>switch case<\/code>?",
    "hint": "Swift takes the safety of your code seriously, which means it will make sure all possibilities are handled.",
    "syntaxHighlighting": false,
    "correct": [
        {
            "answer": "Switch statements are often clearer to read than multiple <code>if<\/code> conditions.",
            "reason": "They help us by focusing on one specific check, rather than many possible checks."
        },
        {
            "answer": "Code from the following case will be run if you use <code>fallthrough<\/code>.",
            "reason": "By default Swift will stop executing code in a switch block once it reaches the end of a case that was matched."
        },
        {
            "answer": "You must list all outcomes as <code>case<\/code> statements or use <code>default<\/code>.",
            "reason": "Switch statements must be exhaustive in Swift, which means that all possible cases are catered for."
        },
        {
            "answer": "You place the value you want to check at the start.",
            "reason": "Switch statements require some sort of value to check at the beginning."
        },
        {
            "answer": "The default case is written as <code>default:<\/code> rather than <code>case default:<\/code>.",
            "reason": "You omit the <code>case<\/code> keyword for the default case."
        },
        {
            "answer": "If you want to match all other values, use <code>default<\/code>.",
            "reason": "This acts as a catch-all for unmatched cases."
        }
    ],
    "wrong": [
        {
            "answer": "Switch statements don't work with integers.",
            "reason": "Switch statements work just fine with integers."
        },
        {
            "answer": "The default case is always needed.",
            "reason": "This default case is not needed if you already cover all other cases, such as with an enum."
        },
        {
            "answer": "You may only use <code>fallthrough<\/code> once.",
            "reason": "You can use <code>fallthrough<\/code> as many times as you want."
        },
        {
            "answer": "Switch statements work best with constants.",
            "reason": "Switch statements work just fine with variables."
        },
        {
            "answer": "You can have a maximum of 10 cases.",
            "reason": "You may have as many cases as you want."
        },
        {
            "answer": "Switch statements make your code run more slowly.",
            "reason": "Switch statements have no special impact on performance compared to other options."
        }
    ]
}